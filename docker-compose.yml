version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  
  # Nginx container path routing, anytime requests come to it on browser,
  # nginx directs request path to the React/Express server
  nginx:
    # restart policy, always keep running if crashes
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      # local machine to inside the nginx container
      - '4000:80'
  api:
    # location / from the current dir .
    build:
       # dockerfile to use
      dockerfile: Dockerfile.dev
      # inside server directory
      context: ./server
    
    volumes:
        # inside the container in app folder, don't install/overide node_modules
      - /app/node_modules
        # copy all files in server dir to app folder inside the container
        # all the changes in source files will be updated in app folder inside container
      - ./server:/app
    environment:
      # sets a variable in the container at - run time, docker-compose up, not when image is created
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      # using postgres default db
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app